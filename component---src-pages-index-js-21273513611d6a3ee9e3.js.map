{"version":3,"sources":["webpack:///./src/components/blurb.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["blurb","_ref2","id","slug","title","date","excerpt","Object","core_browser_esm","key","gatsby_browser_entry","to","css","rhythm","blurb_ref","__webpack_exports__","_ref","data","layout","allMarkdownRemark","totalCount","edges","map","node","fields","frontmatter","query","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","props","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","render","children","useStaticQuery","useContext","context","Error","graphql","propTypes","PropTypes","object","string","isRequired","func","__webpack_require__","d","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","githubTheme","gatsby__WEBPACK_IMPORTED_MODULE_3__","site","siteMetadata","rel","href","alt","style","borderWidth","src","_public_static_d_558995515_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-js-21273513611d6a3ee9e3.js","sourcesContent":["import React from \"react\";\nimport { Link } from 'gatsby'\nimport { css } from '@emotion/core'\nimport { rhythm } from '../utils/typography'\n\nexport default ({\n    id,\n    slug,\n    title,\n    date,\n    excerpt\n}) => (\n  <div key={id}>\n    <Link to={slug}>\n      <h3\n        css={css`\n          margin-bottom: ${rhythm(1 / 4)};\n        `}\n      >\n        {title}{\" \"}\n        <span\n          css={css`\n            color: #bbb;\n          `}\n        >\n          â€” {date}\n        </span>\n      </h3>\n    </Link>\n    <p>{excerpt}</p>\n  </div>\n);\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Blurb from '../components/blurb'\n\nexport default ({ data }) => (\n  <Layout>\n    <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n    {data.allMarkdownRemark.edges.map(({ node }) => (\n      <Blurb key={node.id}\n             slug={node.fields.slug}\n             title={node.frontmatter.title}\n             date={node.frontmatter.date}\n             excerpt={node.excerpt} />\n    ))}\n  </Layout>\n);\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport githubTheme from 'typography-theme-github'\n\nconst typography = new Typography(githubTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm\n","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { StaticQuery, Link, graphql } from \"gatsby\";\n\nimport { rhythm } from \"../utils/typography\";\n\nexport default ({ children }) => (\n  <StaticQuery\n    query={graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `}\n    render={data => (\n      <div\n        css={css`\n          margin: 0 auto;\n          max-width: 700px;\n          padding: ${rhythm(2)};\n          padding-top: ${rhythm(1.5)};\n        `}\n      >\n        <Link to={`/`}>\n          <h3\n            css={css`\n              margin-bottom: ${rhythm(2)};\n              display: inline-block;\n              font-style: normal;\n            `}\n          >\n            {data.site.siteMetadata.title}\n          </h3>\n        </Link>\n        <Link\n          to={`/about/`}\n          css={css`\n            float: right;\n          `}\n        >\n          About\n        </Link>\n        {children}\n        <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\">\n           <img alt=\"Creative Commons License\" style={{ borderWidth: 0}} src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\" />\n        </a>\n      </div>\n    )}\n  />\n);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}