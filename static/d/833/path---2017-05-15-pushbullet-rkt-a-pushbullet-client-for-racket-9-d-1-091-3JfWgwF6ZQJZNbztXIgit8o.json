{"data":{"markdownRemark":{"html":"<p>I wrote a Pushbullet client using Racket a week or so ago.</p>\n<p>The client is made up of a majority of three parts</p>\n<ul>\n<li>API URL constants</li>\n<li>Low-level HTTP GET and PUSH functions</li>\n<li>High-level functions for each endpoint, which take either query parameters or post body data, sends the appropriate HTTP request, and returns the information in a <em>jsexpr</em> type.</li>\n</ul>\n<p>The original reason to write this was because I wanted to rewrite a Python script that checked Nintendo Switch availabilities at Target in Racket. I wrote about that in <a href=\"https://www.devopps.me/blog/python/2017/05/02/using-python-to-find-nintendo-switch-availability.html\">a previous post</a>. The Python script used a Pushbullet module to send a push notification to my phone whenever a Switch was found in stock within 50 miles of me. I wasn't able to find a Racket module or library to use, so I modeled this one after the the <a href=\"https://github.com/randomchars/pushbullet.py\">pushbullet.py</a> Python module I used in the original script.</p>\n<p>To start out I added a <em>pushbullet</em> struct that accepts an Pushbullet API token. This looks like</p>\n<pre><code class=\"language-racket\">(struct pushbullet (token))\n</code></pre>\n<p>In Racket you can create a new <em>pushbullet</em> struct and access the <em>token</em> field like so:</p>\n<pre><code class=\"language-racket\">;; Create a new pushbullet struct and name it \"pb\"\n(define pb (pushbullet YOUR_TOKEN))\n\n;; Access the token stored within \"pb\"\n(pushbullet-token pb)\n</code></pre>\n<p>Now that we have a way or storing and passing a <em>pushbullet</em> instance around, we can make a function that will return a list of HTTP Headers that we'll need for each API request. We'll need a <code>Content-Type: application/json</code> and <code>Access-Token: YOUR_TOKEN</code> header on each request.</p>\n<p>To do so we can write a <code>default-headers</code> function that takes a <em>pushbullet</em> struct and return a list of headers:</p>\n<pre><code class=\"language-racket\">(define (default-headers pb)\n    (list \"Content-Type: application/json\"\n        (string-append \"Access-Token: \" (pushbullet-token pb))))\n</code></pre>\n<p>Using this function we can build a <code>get</code> function to take a <em>pushbullet</em> and a url string and perform the HTTP GET request with the list of default headers and returns a parsed <em>jsexpr</em> from the response body.</p>\n<pre><code class=\"language-racket\">(define (get pb url)\n    (call/input-url (string->url url)\n                    get-pure-port\n                    read-json\n                    (default-headers pb)))\n</code></pre>\n<p>We can also build a <code>post</code> function to take a <em>pushbullet</em>, a url string, a <em>jsexpr</em> body, and a optional list of extra headers, and perform an HTTP POST with those arguments.</p>\n<pre><code class=\"language-racket\">(define (post pb url data . headers)\n    (read-json (post-pure-port  (string->url url)\n                                (jsexpr->bytes data)\n                                (default-headers pb))))\n</code></pre>\n<p>Now that we have a pretty solid framework for making authenticated GET and POST requests, building a public API for this library only takes a couple of lines per endpoint.</p>\n<p>The most helpful endpoint for me is <a href=\"https://docs.pushbullet.com/#create-push\">create-push</a>, which sends a push notification to all of your devices. This endpoint requires to POST to <a href=\"https://api.pushbullet.com/v2/pushes\">https://api.pushbullet.com/v2/pushes</a> with a JSON body that includes a <em>title</em> and <em>body</em> string, and a <code>\"type\": \"note\"</code> field.</p>\n<p>The function to do this in the client looks like:</p>\n<pre><code class=\"language-racket\">(define PUSH_URL \"https://api.pushbullet.com/v2/pushes\")\n(define (pb-push-note pb title body)\n    (define note (hash 'type \"note\" 'title title 'body body))\n    (post pb PUSH_URL note))\n</code></pre>\n<p>Making a function for a GET endpoint is even simpler:</p>\n<pre><code class=\"language-racket\">(define ME_URL \"https://api.pushbullet.com/v2/pushes\")\n(define (pb-get-user-info pb)\n    (hash-ref (get pb DEVICES_URL) 'devices))\n</code></pre>\n<p>The library doesn't support all of the Pushbullet endpoints, mostly because I don't use Pushbullet's other features enough to test it. It does currently support</p>\n<ul>\n<li>Getting user devices</li>\n<li>Getting user chats</li>\n<li>Getting user info</li>\n<li>Getting channels</li>\n<li>Getting all push notifications</li>\n<li>Sending push notifications to all devices</li>\n</ul>\n<h3>Areas of Improvement</h3>\n<p>This currently doesn't include an <code>info.rkt</code> file to use this with something like <code>raco pkg</code>. This is a pretty high priority fix, since this library is kind of useful if you can't include it in a Racket file with something like <code>(require pushbullet)</code>. Other than that it'd be nice to have more complete support for the Pushbullet API, but I'll add those incrementally over the next couple weeks.</p>\n<p>If you'd like to use this and really want a certain endpoint supported, feel free to make an issue at <a href=\"https://github.com/copperwall/pushbullet-rkt\">https://github.com/copperwall/pushbullet-rkt</a>.</p>\n<h3>Full Source</h3>\n<p>This project is hosted on Github at <a href=\"https://github.com/copperwall/pushbullet-rkt\">copperwall/pushbullet-rkt</a>, but here's a copy of the source as of this writing.</p>\n<pre><code class=\"language-racket\">#lang racket\n\n(require json)\n(require net/url)\n\n;; pushbullet-rkt\n;; A minimal racket library for interacting with Pushbullet.\n\n;; URL definitions\n(define DEVICES_URL \"https://api.pushbullet.com/v2/devices\")\n(define CHATS_URL \"https://api.pushbullet.com/v2/chats\")\n(define CHANNELS_URL \"https://api.pushbullet.com/v2/channels\")\n(define ME_URL \"https://api.pushbullet.com/v2/users/me\")\n(define PUSH_URL \"https://api.pushbullet.com/v2/pushes\")\n(define UPLOAD_REQUEST_URL \"https://api.pushbullet.com/v2/upload-request\")\n(define EPHERMERALS_URL \"https://api.pushbullet.com/v2/ephemerals\")\n\n(struct pushbullet (token))\n\n;; Make an authenticated GET request to the given url string.\n(define (get pb url)\n  (call/input-url (string->url url)\n                  get-pure-port\n                  read-json\n                  (default-headers pb)))\n\n;; Make an authenticated POST request to the given url string\n;; using the data jsexpr as the request body.\n(define (post pb url data . headers)\n  (read-json (post-pure-port (string->url PUSH_URL)\n                                (jsexpr->bytes data)\n                                (default-headers pb))))\n\n;; Create a list of default headers given a pushbullet struct.\n;; This uses the token field of the pushbullet struct for\n;; authentication.\n(define (default-headers pb)\n  (list \"Content-Type: application/json\"\n        (string-append \"Access-Token: \" (pushbullet-token pb))))\n\n;; Get a list of devices\n(define (pb-get-devices pb)\n  (hash-ref (get pb DEVICES_URL) 'devices))\n\n;; Get a list of chats\n(define (pb-get-chats pb)\n  (hash-ref (get pb CHATS_URL) 'chats))\n\n;; Get a hash of user information\n(define (pb-get-user-info pb)\n  (get pb ME_URL))\n\n;; Get a list of channels\n(define (pb-get-channels pb)\n  (hash-ref (get pb CHANNELS_URL) 'channels))\n\n;; Get a list of all pushes\n(define (pb-get-pushes pb)\n  (hash-ref (get pb PUSH_URL) 'pushes))\n\n;; Send a push to all devices with the given title and body\n(define (pb-push-note pb title body)\n  (define note (hash 'type \"note\" 'title title 'body body))\n  (post pb PUSH_URL note))\n</code></pre>","frontmatter":{"title":"pushbullet-rkt: A Pushbullet client for Racket"}}},"pageContext":{"slug":"/2017-05-15-pushbullet-rkt-a-pushbullet-client-for-racket/"}}